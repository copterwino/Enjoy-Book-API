import { Request, Response} from 'express';
import { getAllBooksService, addNewBookService, getBookByIdService } from '../services/book';
import { sendResponse } from '../utils/response';

// üß© ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡πâ‡∏≤‡∏á response (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ã‡πâ‡∏≥)


export  const getBooks = async (req: Request, res: Response) => {
    try{
        const result = await getAllBooksService();
        console.log(result);

        if(!result.success){
            return res.status(result.code).json({
                code: result.code,
                status: "error",
                message: result.message
            })
        }

        return res.status(result.code).json({
            code: result.code,
            status: "success",
            message: result.message,
            data: result.data
        });
    }catch(error){
        console.error('Error in get Books controller', error);
        return res.status(500).json({
            code: 500,
            status: "error",
            message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ"
        })
    }
};

export const addBook = async (req: Request, res: Response) => {
    try{
        const {book_id, type, img, title, by, intro, description, status, end_state} = req.body;
        //‡∏î‡∏±‡∏ÅError ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö
        if(!book_id || !type || !img || !title || !intro || !description){
            return res.status(400).json(
                {
                    code: 400,
                    status: "error",
                    message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô"
                }
            );  
        }

        const result = await addNewBookService(book_id, type, img, by, title, intro, description, status, end_state);

        if(!result.success){
            return res.status(result.code).json({
                code: result.code,
                status: "error",
                message: result.message,
            })
        }

        return res.status(200).json({
            code: result.code,
            status: "success",
            message: result.message,
            data: result
        });

    }catch(error){
        console.error('Error in post Book controller', error);
        res.status(500).json({
            code: 500,
            status: "error",
            message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        })
    }
}

export const getBookById = async(req: Request, res: Response) => {
    //console.log(req.params);
    try{
        const {book_id} = req.params;
        console.log("book_id = ",book_id);
        const result = await getBookByIdService(book_id);

        if(!result.success){
            return res.status(result.code).json({
                code: result.code,
                status: "error",
                message: result.message
            });
        }

        return res.status(200).json({
            code: 200,
            status: "success",
            message: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            data: result.data
        });
    }catch(error){
        console.error('Error in post Book controller', error);
        return res.status(500).json({
            code: 500,
            status: "error",
            message: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
        })
    }
}

//Format ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ **
// {
//     "code": 200,
//     "status": "success",
//     "message": "‡∏î‡∏∂‡∏á‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
//     "data": {
//         "page": 1,
//         "limit": 20,
//         "total": 1,
//         "totalPages": 1
//     }
// }